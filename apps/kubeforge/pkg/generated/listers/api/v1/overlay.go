/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "kubeforge/internal/k8s/api/v1"

	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// OverlayLister helps list Overlays.
// All objects returned here must be treated as read-only.
type OverlayLister interface {
	// List lists all Overlays in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Overlay, err error)
	// Overlays returns an object that can list and get Overlays.
	Overlays(namespace string) OverlayNamespaceLister
	OverlayListerExpansion
}

// overlayLister implements the OverlayLister interface.
type overlayLister struct {
	listers.ResourceIndexer[*v1.Overlay]
}

// NewOverlayLister returns a new OverlayLister.
func NewOverlayLister(indexer cache.Indexer) OverlayLister {
	return &overlayLister{listers.New[*v1.Overlay](indexer, v1.Resource("overlay"))}
}

// Overlays returns an object that can list and get Overlays.
func (s *overlayLister) Overlays(namespace string) OverlayNamespaceLister {
	return overlayNamespaceLister{listers.NewNamespaced[*v1.Overlay](s.ResourceIndexer, namespace)}
}

// OverlayNamespaceLister helps list and get Overlays.
// All objects returned here must be treated as read-only.
type OverlayNamespaceLister interface {
	// List lists all Overlays in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Overlay, err error)
	// Get retrieves the Overlay from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.Overlay, error)
	OverlayNamespaceListerExpansion
}

// overlayNamespaceLister implements the OverlayNamespaceLister
// interface.
type overlayNamespaceLister struct {
	listers.ResourceIndexer[*v1.Overlay]
}
